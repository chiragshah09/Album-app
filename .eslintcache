[{"D:\\Harshit\\ReactJs\\albums-app\\src\\index.js":"1","D:\\Harshit\\ReactJs\\albums-app\\src\\App.js":"2","D:\\Harshit\\Album-app\\src\\index.js":"3","D:\\Harshit\\Album-app\\src\\App.js":"4"},{"size":175,"mtime":1606887877456,"results":"5","hashOfConfig":"6"},{"size":2655,"mtime":1606983496902,"results":"7","hashOfConfig":"6"},{"size":175,"mtime":1606887877456,"results":"8","hashOfConfig":"9"},{"size":3077,"mtime":1606996567173,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"4n1dtj",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"n4xumn",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Harshit\\ReactJs\\albums-app\\src\\index.js",[],["22","23"],"D:\\Harshit\\ReactJs\\albums-app\\src\\App.js",["24","25","26"],"import { useState,useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nconst url = \"https://jsonplaceholder.typicode.com/albums/\";\n\nconst App = () => {\n  const [albums , setalbum] = useState([]);\n  const [selectedalbum , setselectedalbum] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [openPhotos, setOpenPhotos] = useState(false);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  },[]); \n\n  const delay = ms => new Promise(r => setTimeout(r, ms));\n\n  const fetchData = async () => {\n    const res = await fetch(url);\n    const data = await res.json();\n    await delay(1000);\n    setLoader(false)\n    setalbum(data);\n  }\n\n  const handleClick = async (e) =>{\n    setLoader(true);\n    const res = await fetch(url + e.target.id);\n    const data = await res.json();\n    const res1 = await fetch(url + e.target.id +\"/photos\");\n    const data1 = await res1.json();\n    await delay(1000);\n    setOpenPhotos(true);\n    setLoader(false);\n    setselectedalbum(data);\n    setPhotos(data1);\n  }\n\n  return (\n    <div>\n      \n      {loader? <Loader type=\"Oval\" color=\"#00BFFF\" height={200} width={200} style= {{textAlign: \"center\", display: \"block\" , margin: \"150px auto\"}}/> : null}\n      {!openPhotos && !loader ? \n      <AlbumsList albums={albums} header=\"Album App\" onClick={handleClick} />: !loader? <AlbumImage photos={photos} albumdetail={selectedalbum} /> : null\n      }\n    \n     </div>\n  );\n}\n\nconst AlbumsList = (props) =>{\n  const {albums, header, onClick} = props;\n  return(\n    <div  className=\"Container\" >\n      <h1>{header}</h1>\n      <ul>\n          {albums.map(({id, title}) => (                                                                                                                                                          \n            <li key={id} onClick={onClick} id={id}>{title}</li>\n          ))}\n      </ul> \n\n      </div>\n  );\n}\n\nconst AlbumImage = (props) =>{\n  const [modal, setmodal] = useState(false);\n  const [selectimg , setselectimg] = useState();\n  const {photos, albumdetail: {title}} = props;\n  const openModal = (e) =>{\n    setmodal(true);\n    \n  }\n  const getRandomSize = (min, max) => {\n    return Math.round(Math.random() * (max - min) + min);\n  }\n  return(\n    <div  className=\"Container\" >\n       <h1>Our Gallary</h1>\n      \n       <p>Album Name:<span> {title} </span></p>\n      \n     {!modal ? <div className=\"photos-grid\">\n          {photos.map(({id,thumbnailUrl,title}) => (<img src={thumbnailUrl} id={id}  onClick={openModal} alt={title} height={getRandomSize(200, 400)} /> ))}\n  </div> : null\n  }\n\n    </div>\n  )\n}\n\n\n\nexport default App;\n","D:\\Harshit\\Album-app\\src\\index.js",[],["27","28"],"D:\\Harshit\\Album-app\\src\\App.js",["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":14,"column":5,"nodeType":"37","endLine":14,"endColumn":7,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":68,"column":10,"nodeType":"41","messageId":"42","endLine":68,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":68,"column":22,"nodeType":"41","messageId":"42","endLine":68,"endColumn":34},{"ruleId":"31","replacedBy":"44"},{"ruleId":"33","replacedBy":"45"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":5,"nodeType":"37","endLine":15,"endColumn":7,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":73,"column":51,"nodeType":"49","messageId":"50","endLine":73,"endColumn":53},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-unused-vars","'selectimg' is assigned a value but never used.","Identifier","unusedVar","'setselectimg' is assigned a value but never used.",["51"],["52"],["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"55","fix":"57"},"Update the dependencies array to be: [fetchData]",{"range":"58","text":"59"},{"range":"60","text":"59"},[458,460],"[fetchData]",[459,461]]